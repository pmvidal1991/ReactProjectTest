[{"C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\index.tsx":"1","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\registerServiceWorker.tsx":"2","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\App.tsx":"3","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\initialState.js":"4","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\configureStore.tsx":"5","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\indexWine.tsx":"6","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\HomePage\\indexHome.tsx":"7","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\indexLogin.tsx":"8","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\WinesActions.js":"9","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\LoginActions.js":"10","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\utils\\ComboValues.js":"11","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\ErrorBoundary.tsx":"12","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Modals\\AddWineModal.tsx":"13","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\MenuComponent.tsx":"14","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Modals\\WineDetailsModal.tsx":"15","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\table\\WineTableComponent.tsx":"16","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\components\\ErrorBoundary.tsx":"17","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\HomePage\\components\\MenuComponent.tsx":"18","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\components\\form\\loginForm.tsx":"19","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\actionTypes.js":"20","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\LoginApi.tsx":"21","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\WineApi.tsx":"22","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\index.tsx":"23","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Forms\\DetailsWineForm.tsx":"24","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Forms\\AddWineForm.tsx":"25","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\apiUtils.tsx":"26","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\Wines\\WinesReducer.js":"27","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\Login\\LoginReducer.tsx":"28"},{"size":531,"mtime":1636023114475,"results":"29","hashOfConfig":"30"},{"size":4299,"mtime":1636023114495,"results":"31","hashOfConfig":"30"},{"size":2186,"mtime":1636045175273,"results":"32","hashOfConfig":"30"},{"size":317,"mtime":1636049380843,"results":"33","hashOfConfig":"30"},{"size":1064,"mtime":1636023114485,"results":"34","hashOfConfig":"30"},{"size":16729,"mtime":1636131277513,"results":"35","hashOfConfig":"30"},{"size":4004,"mtime":1636134650889,"results":"36","hashOfConfig":"30"},{"size":5604,"mtime":1636049345003,"results":"37","hashOfConfig":"30"},{"size":6322,"mtime":1636131694015,"results":"38","hashOfConfig":"30"},{"size":4652,"mtime":1636127684591,"results":"39","hashOfConfig":"30"},{"size":1139,"mtime":1636023114496,"results":"40","hashOfConfig":"30"},{"size":2225,"mtime":1636126812375,"results":"41","hashOfConfig":"30"},{"size":4649,"mtime":1636127199355,"results":"42","hashOfConfig":"30"},{"size":3643,"mtime":1636044941897,"results":"43","hashOfConfig":"30"},{"size":1909,"mtime":1636131275314,"results":"44","hashOfConfig":"30"},{"size":13651,"mtime":1636133100647,"results":"45","hashOfConfig":"30"},{"size":1749,"mtime":1636026088254,"results":"46","hashOfConfig":"30"},{"size":3165,"mtime":1636023114442,"results":"47","hashOfConfig":"30"},{"size":4659,"mtime":1636023114450,"results":"48","hashOfConfig":"30"},{"size":2375,"mtime":1636023114483,"results":"49","hashOfConfig":"30"},{"size":336,"mtime":1636043341407,"results":"50","hashOfConfig":"30"},{"size":771,"mtime":1636134303256,"results":"51","hashOfConfig":"30"},{"size":446,"mtime":1636132356882,"results":"52","hashOfConfig":"30"},{"size":4735,"mtime":1636131268079,"results":"53","hashOfConfig":"30"},{"size":13356,"mtime":1636126370847,"results":"54","hashOfConfig":"30"},{"size":741,"mtime":1636023114474,"results":"55","hashOfConfig":"30"},{"size":2082,"mtime":1636131712041,"results":"56","hashOfConfig":"30"},{"size":902,"mtime":1636023114491,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ypb87l",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"60"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"60"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"141","usedDeprecatedRules":"60"},"C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\index.tsx",[],["142","143"],"C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\registerServiceWorker.tsx",["144","145"],"// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n        registration.onupdatefound = () =>\r\n        {\r\n            const installingWorker: ServiceWorker = registration.installing as ServiceWorker;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker?.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n\r\n            response.status === 404 || response !== null && response.headers !== null && response.headers.get('content-type') !== null &&\r\n        response?.headers?.get('content-type')?.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\App.tsx",["146","147","148","149"],"import React from \"react\";\r\nimport './App.css';\r\nimport\r\n{\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport configureStore from './redux/configureStore'\r\nimport { Provider as ReduxProvider, } from 'react-redux';\r\nimport Login from './Login/indexLogin'\r\nimport HomePage from './HomePage/indexHome'\r\nimport WinePage from './Wine/indexWine'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { initialState } from \"./redux/initialState\";\r\nconst { store, persistor } = configureStore(initialState);\r\n\r\n\r\nconst App: React.FC = () =>\r\n{\r\n\r\n\r\n    return (\r\n        <ReduxProvider store={store}>\r\n            <PersistGate persistor={persistor}>\r\n                <Router>\r\n                    <div className=\"App-header\">\r\n                        <ToastContainer />\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/Homepage\">\r\n                                <HomePage />\r\n                            </PrivateRoute>\r\n                            <PrivateRoute exact path=\"/Wine\">\r\n                                <WinePage />\r\n                            </PrivateRoute>\r\n                            <Route path=\"/\">\r\n                                <Login />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </PersistGate>\r\n        </ReduxProvider>\r\n    );\r\n\r\n}\r\n\r\nfunction PrivateRoute({ children , ...rest }:any)\r\n{\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                store.getState().Login && store.getState().Login.Username ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\initialState.js",["150"],"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initialState = void 0;\r\nexports.initialState = {\r\n    Login: null,\r\n    userIsLoading: false,\r\n    LoginError: null,\r\n    WinesError: null,\r\n    winesIsLoading: false,\r\n    Wines: null\r\n};\r\n//# sourceMappingURL=initialState.js.map",["151","152"],"C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\configureStore.tsx",["153"],"﻿import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport { Reducer } from \"redux\";\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { initialStateModel } from './initialState';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: hardSet,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer as Reducer);\r\nexport default function configureStore(initialState: initialStateModel)\r\n{\r\n    const composeEnhancers = composeWithDevTools || compose;\r\n    let store = createStore(persistedReducer, initialState, composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant())))\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\indexWine.tsx",["154","155"],"﻿import React, { useState } from \"react\";\r\nimport { Action, bindActionCreators } from \"redux\";\r\nimport * as WinesActions from \"../redux/actions/WinesActions\";\r\nimport * as LoginActions from \"../redux/actions/LoginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../HomePage/HomePage.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { wineBrands, wineTypes, wineRegions, wineSections, wineDivision } from '../utils/ComboValues'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport utf8 from 'utf8';\r\nimport {\r\n    withStyles,\r\n} from '@material-ui/core/styles';\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { initialStateModel } from \"../redux/initialState\";\r\nimport { wineFilters, WinePagePropsInterface, WinesResponse } from \"./WineInterfaces\";\r\nimport { AxiosError } from \"axios\";\r\nimport MenuComponent from \"./components/MenuComponent\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\nimport WineTableComponent from \"./components/table/WineTableComponent\";\r\nimport AddWineModal from \"./components/Modals/AddWineModal\";\r\nimport WineDetailsModal from \"./components/Modals/WineDetailsModal\";\r\n\r\nconst CssSelect = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-input': {\r\n            color: 'black',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.MuiFormControl-root ': {\r\n            minWidth: '600px',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n                color: 'black'\r\n            },\r\n\r\n\r\n        },\r\n    },\r\n})(Select);\r\n\r\nconst WinePage: React.FC<WinePagePropsInterface | null> = props => {\r\n    const {\r\n        User,\r\n        login,\r\n        WinesError,\r\n        getWinesError,\r\n        getWineByIdError,\r\n        AddWineError,\r\n        iswinesLoading,\r\n        winesisLoading,\r\n        setWines,\r\n        Wines,\r\n        getWineById,\r\n        addWineError,\r\n        WineError,\r\n        Wine\r\n    } = props;\r\n    const [showmodal, setShowmodal] = useState(false);\r\n    const [filters, setFilters] = useState({ brand: '', type: '', region: '', section: '', division: '' });\r\n    const [filterBrand, setFilterBrand] = useState('');\r\n    const [filterType, setFilterType] = useState('');\r\n    const [filterSection, setFilterSection] = useState('');\r\n    const [filterDivision, setFilterDivision] = useState('');\r\n    const [filterRegion, setFilterRegion] = useState('');\r\n    const [showEditmodal, setShowEditmodal] = useState(false);\r\n    const showLoader = () => {\r\n\r\n        winesisLoading(true);\r\n\r\n\r\n    };\r\n    const closeLoader = () => {\r\n\r\n        winesisLoading(false);\r\n\r\n    };\r\n    const closeEditModal = () => {\r\n        setShowEditmodal(false);\r\n    }\r\n    const closeModal = () => {\r\n        setShowmodal(false);\r\n    }\r\n    const showEditModal = () => {\r\n        setShowEditmodal(true);\r\n    }\r\n    const handleOnChangeFilters = (value: string, name: string) => {\r\n\r\n        switch (name) {\r\n            case \"brand\": {\r\n\r\n                const newFilterArr = filters;\r\n                newFilterArr.brand = utf8.encode(value);\r\n                setFilters(newFilterArr);\r\n                break;\r\n            }\r\n            case \"type\": {\r\n                const newFilterArr = filters;\r\n                newFilterArr.type = utf8.encode(value);\r\n                setFilters(newFilterArr);\r\n                break;\r\n            }\r\n            case \"region\": {\r\n                const newFilterArr = filters;\r\n                newFilterArr.region = utf8.encode(value);\r\n                setFilters(newFilterArr);\r\n                break;\r\n            }\r\n            case \"section\": {\r\n                const newFilterArr = filters;\r\n                newFilterArr.section = utf8.encode(value);\r\n                setFilters(newFilterArr);\r\n                break;\r\n            }\r\n            case \"division\": {\r\n                const newFilterArr = filters;\r\n                newFilterArr.division = utf8.encode(value);\r\n                setFilters(newFilterArr);\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n    const clearFiltrers = async () => {\r\n        setFilters({ brand: '', type: '', region: '', section: '', division: '' });\r\n        setFilterBrand('');\r\n        setFilterType('');\r\n        setFilterRegion('');\r\n        setFilterSection('');\r\n        setFilterDivision('');\r\n        showLoader();\r\n\r\n        try {\r\n            await setWines({ brand: '', type: '', region: '', section: '', division: '' }).then((resp: WinesResponse) => {\r\n                closeLoader();\r\n            });\r\n        }\r\n        catch (ex) {\r\n            closeLoader();\r\n            toast.error(\"An error has occured while trying geting the list\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n        }\r\n\r\n    }\r\n    const getList = async () => {\r\n        showLoader();\r\n\r\n        try {\r\n            await setWines(filters).then((resp: WinesResponse) => {\r\n                closeLoader();\r\n            });\r\n        }\r\n        catch (ex) {\r\n            closeLoader();\r\n            toast.error(\"An error has occured while trying geting the list\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ textAlign: \"center\", marginTop: \"5%\", maxWidth: '1513px' }}>\r\n                <ErrorBoundary Error={WinesError} getWinesError={getWinesError} getWineByIdError={getWineByIdError} AddWineError={AddWineError} closeModal={closeModal} type='list'>\r\n                    <LoadingOverlay active={iswinesLoading} spinner text={\"Loading...\"}>\r\n                        <div className=\"wrapper\">\r\n                            <div id=\"formContent2\">\r\n                                <MenuComponent\r\n                                    user={User}\r\n                                    login={login}\r\n                                />\r\n                                <div\r\n                                    className=\"row\"\r\n                                    style={{ marginTop: \"2%\", width: \"96%\", marginLeft: \"2%\" }}\r\n                                >\r\n                                </div>\r\n                                <div\r\n                                    className=\"row\"\r\n                                    style={{ marginTop: \"2%\", width: \"96%\", marginLeft: \"2%\" }}\r\n                                >\r\n                                    <button type=\"submit\" id=\"AddEventButtonModal\" style={{ float: 'right', width: \"250px\" }} onClick={() => { setShowmodal(true) }} className='btn btn-primary'>\r\n                                        Add Wine\r\n                                    </button>\r\n                                </div>\r\n                                <div\r\n                                    className=\"row\"\r\n                                    style={{ marginTop: \"2%\", width: \"96%\", marginLeft: \"2%\", borderRadius: '40px', border: 'solid', borderWidth: '1px', borderColor: 'grey', padding: '50px' }}\r\n                                >\r\n                                    <div className='col-md-4'>\r\n                                        <InputLabel htmlFor=\"color-native-simple\">Select Brand</InputLabel>\r\n                                        <CssSelect\r\n                                            onChange={(option: React.ChangeEvent<{ value: unknown }>) => { setFilterBrand(option.target.value as string); handleOnChangeFilters(option.target.value as string, \"brand\") }}\r\n                                            value={filterBrand}\r\n                                            style={{ width: 300 }}\r\n                                            name=\"brand\"\r\n                                            placeholder={\"Brand\"}\r\n                                            inputProps={{ style: { width: 300 } }}\r\n                                        >\r\n                                            <MenuItem value=\"\"> </MenuItem>\r\n                                            {wineBrands.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                        </CssSelect></div>\r\n                                    <div className='col-md-4'>\r\n                                        <InputLabel htmlFor=\"color-native-simple\">Select Type</InputLabel>\r\n                                        <CssSelect\r\n                                            onChange={(option: React.ChangeEvent<{ value: unknown }>) => { setFilterType(option.target.value as string); handleOnChangeFilters(option.target.value as string, \"type\"); }}\r\n                                            value={filterType}\r\n                                            name=\"type\"\r\n                                            style={{ width: 300 }}\r\n                                            placeholder={\"Type\"}\r\n                                            inputProps={{ style: { width: 300 } }}\r\n                                        >\r\n                                            <MenuItem value=\"\"> </MenuItem>\r\n                                            {wineTypes.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                        </CssSelect></div>\r\n                                    <div className='col-md-4'>\r\n                                        <InputLabel htmlFor=\"color-native-simple\">Select Region</InputLabel>\r\n                                        <CssSelect\r\n                                            onChange={(option: React.ChangeEvent<{ value: unknown }>) => { setFilterRegion(option.target.value as string); handleOnChangeFilters(option.target.value as string, \"region\") }}\r\n                                            value={filterRegion}\r\n                                            name=\"region\"\r\n                                            placeholder={\"Region\"}\r\n                                            style={{ width: 300 }}\r\n                                            inputProps={{ style: { width: 300 } }}\r\n                                        >\r\n                                            <MenuItem value=\"\"> </MenuItem>\r\n                                            {wineRegions.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                        </CssSelect></div>\r\n\r\n                                    <div className='col-md-4' style={{ marginTop: '2%' }}>\r\n                                        <InputLabel htmlFor=\"color-native-simple\" >Select Section</InputLabel>\r\n                                        <CssSelect\r\n                                            onChange={(option: React.ChangeEvent<{ value: unknown }>) => { setFilterSection(option.target.value as string); handleOnChangeFilters(option.target.value as string, \"section\"); }}\r\n                                            value={filterSection}\r\n                                            style={{ width: 300, marginTop: '2%' }}\r\n                                            name=\"section\"\r\n                                            placeholder={\"Section\"}\r\n                                            inputProps={{ style: { width: 300 } }}\r\n                                        >\r\n                                            <MenuItem value=\"\"> </MenuItem>\r\n                                            {wineSections.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                        </CssSelect></div>\r\n                                    <div className='col-md-4' style={{ marginTop: '2%' }}>\r\n                                        <InputLabel htmlFor=\"color-native-simple\" >Select Division</InputLabel>\r\n                                        <CssSelect\r\n                                            onChange={(option: React.ChangeEvent<{ value: unknown }>) => { setFilterDivision(option.target.value as string); handleOnChangeFilters(option.target.value as string, \"division\") }}\r\n                                            value={filterDivision}\r\n                                            name=\"division\"\r\n                                            style={{ width: 300 }}\r\n                                            placeholder={\"Division\"}\r\n                                            inputProps={{ style: { width: 300 } }}\r\n                                        >\r\n                                            <MenuItem value=\"\"> </MenuItem>\r\n                                            {wineDivision.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                        </CssSelect></div>\r\n                                    <div className='col-md-4'></div>\r\n                                    <div className='col-md-4' style={{ marginTop: '5%' }}></div>\r\n                                    <div className='col-md-4' style={{ marginTop: '5%' }}></div>\r\n                                    <div className='col-md-4' style={{ marginTop: '5%' }}>\r\n                                        <button type=\"button\" style={{ width: \"150px\", backgroundColor: \"rgb(159, 29, 65)\" }} onClick={() => { clearFiltrers()}} className='btn btn-primary'>\r\n                                            Clear filters <ClearIcon style={{ fontSize: '20px' }} />\r\n                                        </button>\r\n                                        <button type=\"button\" style={{ width: \"150px\", marginLeft: '1%', backgroundColor: \"rgb(159, 29, 65)\" }} onClick={() => { getList() }} className='btn btn-primary'>\r\n                                            Search Table  <SearchIcon style={{ fontSize: '20px' }} />\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"row\"\r\n                                    style={{ marginTop: \"2%\", width: \"96%\", marginLeft: \"2%\" }}\r\n                                >\r\n                                    <WineTableComponent list={Wines} showLoader={showLoader} showEditModal={showEditModal} closeLoader={closeLoader} getWineById={getWineById} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </LoadingOverlay>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <AddWineModal showmodal={showmodal} closeModal={closeModal} getList={getList} iswinesLoading={iswinesLoading} getWinesError={getWinesError} getWineByIdError={getWineByIdError} AddWineError={AddWineError} addWineError={addWineError} winesisLoading={winesisLoading} />\r\n            <WineDetailsModal showmodal={showEditmodal} closeModal={closeEditModal} wine={Wine} getWinesError={getWinesError} getWineByIdError={getWineByIdError} AddWineError={AddWineError} WineError={WineError} />\r\n        </>);\r\n}\r\nfunction mapStateToProps(state: initialStateModel) {\r\n    return {\r\n        User: state.Login,\r\n        WinesError: state.WinesError,\r\n        iswinesLoading: state.winesIsLoading,\r\n        Wines: state.Wines,\r\n        addWineError: state.AddWineError,\r\n        WineError: state.WineError,\r\n        Wine: state.Wine\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch: ThunkDispatch<initialStateModel, void, Action>) {\r\n    return {\r\n        login: (arg: FormData | null) => dispatch(LoginActions.login(arg)),\r\n        getWinesError: (arg: AxiosError | null) => dispatch(WinesActions.getWinesError(arg)),\r\n        getWineByIdError: (arg: AxiosError | null) => dispatch(WinesActions.getWineByIdError(arg)),\r\n        AddWineError: (arg: AxiosError | null) => dispatch(WinesActions.AddWineError(arg)),\r\n        winesisLoading: (arg: boolean) => dispatch(WinesActions.winesisLoading(arg)),\r\n        setWines: (arg: wineFilters) => dispatch(WinesActions.setWines(arg)),\r\n        getWineById: (arg: string) => dispatch(WinesActions.getWineById(arg)),\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps as any)(WinePage);\r\n","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\HomePage\\indexHome.tsx",["156","157","158","159","160"],"C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\indexLogin.tsx",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"﻿import React, { useContext, createContext, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginForm from \"./components/form/loginForm\";\r\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as LoginActions from \"../redux/actions/LoginActions\";\r\nimport * as WinesActions from \"../redux/actions/WinesActions\";\r\nimport { Action } from \"redux\";\r\nimport { loginPropsInterface, loginFormInitialValuesInterface, loginFormPropsInterface, LoginResponse } from \"./LoginInterfaces\";\r\nimport \"./LoginPage.css\";\r\nimport\r\n{\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { initialStateModel, initialState } from \"../redux/initialState\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport ErrorBoundary from \"./components/ErrorBoundary\";\r\nimport { AxiosError } from \"axios\";\r\nimport { wineFilters } from \"../Wine/WineInterfaces\";\r\n\r\nconst Login: React.FC<loginPropsInterface | null> = props =>\r\n{\r\n    const { isLoading, login, userisLoading, Error, loginError, setWines } = props;\r\n    let history = useHistory();\r\n    let { from } = { from: { pathname: \"/Homepage\" } };\r\n\r\n    const setAppValues = async () =>\r\n    {\r\n        //await setBeers({ brand: '', type: '', region: '', section: '', division: '' });\r\n        await setWines({ brand: '', type: '', region: '', section: '', division: '' });\r\n    };\r\n    const login1 = async (values: loginFormInitialValuesInterface, { setSubmitting }: any) =>\r\n    {\r\n        //setLoading(true);\r\n        userisLoading(true);\r\n        setSubmitting(true);\r\n        const headers = {\r\n            ContentType: \"application/json\"\r\n        };\r\n        var data = new FormData();\r\n        data.append(\"Username\", values.username);\r\n        data.append(\"Password\", values.password);\r\n        data.append(\"Login\", 'true');\r\n        try\r\n        {\r\n            await login(data).then((resp: LoginResponse) =>\r\n            {\r\n                if (resp.user)\r\n                {\r\n                    const { user } = resp;\r\n                    if (user !== null && user.success == true)\r\n                    {\r\n                        // actions.login(user);\r\n                        userisLoading(false);\r\n                        setAppValues();\r\n\r\n                        const ToastMsg = () => (\r\n                            <div style={{ fontSize: \"20px\" }}>Welcome: {user.Username}</div>\r\n                        );\r\n                        // sessionStorage.setItem(\"isAuthenticated\", true);\r\n                        toast.success(<ToastMsg />, {\r\n                            position: toast.POSITION.TOP_CENTER\r\n                        });\r\n                        history.push(from);\r\n                        userisLoading(false);\r\n                        setSubmitting(false);\r\n\r\n                    } else\r\n                    {\r\n                        const ToastMsg = () => (\r\n                            <div style={{ fontSize: \"20px\" }}>\r\n                                Password or Username are Incorret!\r\n                            </div>\r\n                        );\r\n                        toast.error(<ToastMsg />, {\r\n                            position: toast.POSITION.TOP_CENTER\r\n                        });\r\n                    }\r\n                }\r\n                setSubmitting(false);\r\n                userisLoading(false);\r\n            });\r\n        }\r\n        catch (ex)\r\n        {\r\n            userisLoading(false);\r\n            toast.error(\"An error has occured while trying trying to Login\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n        }\r\n\r\n    };\r\n    useEffect(() =>\r\n    {\r\n        login(null);\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"container\"\r\n                style={{ textAlign: \"center\", marginBottom: \"10%\", maxWidth: '1513px' }}\r\n            >\r\n                <ErrorBoundary Error={Error} loginError={loginError}>\r\n                    <div className=\"wrapper fadeInDown\">\r\n                        <div id=\"formContent\">\r\n                            <div className=\"fadeIn first\">\r\n                                <label style={{ width: '100%', marginTop: '5%', fontSize: '45px', color: 'rgb(159, 29, 65)' }}>CellarManager<LocalBarIcon style={{ marginLeft: '1%', marginBottom: '1%', fontSize: '45px', color: 'rgb(159, 29, 65)' }} /></label>\r\n                            </div>\r\n                            <LoginForm onSubmit={login1} loading={isLoading} />\r\n\r\n                            <div id=\"formFooter\" />\r\n                        </div>\r\n                    </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nfunction mapStateToProps(state: initialStateModel)\r\n{\r\n    return {\r\n        isLoading: state.userIsLoading,\r\n        Error: state.LoginError,\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch: ThunkDispatch<initialStateModel, void, Action>)\r\n{\r\n    return {\r\n        login: (arg: FormData | null) => dispatch(LoginActions.login(arg)),\r\n        userisLoading: (arg: boolean) => dispatch(LoginActions.userisLoading(arg)),\r\n        loginError: (arg: AxiosError | null) => dispatch(LoginActions.loginError(arg)),\r\n        setWines: (arg: wineFilters) => dispatch(WinesActions.setWines(arg)),\r\n    };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps as any)(Login)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\WinesActions.js",["177","178","179","180","181","182","183","184"],"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.winesisLoading = exports.getWineById = exports.getWineByIdSuccess = exports.setWines = exports.AddWineError = exports.getWineByIdError = exports.getWinesError = exports.getWinesSuccess = void 0;\r\nvar types = require(\"./actionTypes\");\r\nvar WineApi = require(\"../../api/WineApi\");\r\nvar GetWinesErrorMessage = 'An error has occured while trying geting the list: ';\r\nvar GetWineErrorMessage = \"An error has occured while trying geting the wine: \";\r\nvar AddWineErrorMessage = \"An error has occured while trying to add the wine: \";\r\nfunction getWinesSuccess(Wines) {\r\n    return { type: types.GET_WINES_SUCCESS, Wines: Wines };\r\n}\r\nexports.getWinesSuccess = getWinesSuccess;\r\nfunction getWinesError(Error) {\r\n    return { type: types.GET_WINES_ERROR, WinesError: { isError: Error && Error.isAxiosError !== undefined ? Error.isAxiosError : false, errorMessage: Error && Error.message !== undefined ? GetWinesErrorMessage + Error.message : '' } };\r\n}\r\nexports.getWinesError = getWinesError;\r\nfunction getWineByIdError(Error) {\r\n    return { type: types.GET_WINE_BY_ID_ERROR, WineError: { isError: Error && Error.isAxiosError !== undefined ? Error.isAxiosError : false, errorMessage: Error && Error.message !== undefined ? GetWineErrorMessage + Error.message : '' } };\r\n}\r\nexports.getWineByIdError = getWineByIdError;\r\nfunction AddWineError(Error) {\r\n    return { type: types.ADD_WINE_ERROR, AddWineError: { isError: Error && Error.isAxiosError !== undefined ? Error.isAxiosError : false, errorMessage: Error && Error.message !== undefined ? AddWineErrorMessage + Error.message : '' } };\r\n}\r\nexports.AddWineError = AddWineError;\r\nfunction setWines(filters) {\r\n    return function (dispatch) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var WinesResp, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, WineApi.GetWines(filters)];\r\n                    case 1:\r\n                        WinesResp = _a.sent();\r\n                        return [2 /*return*/, dispatch(getWinesSuccess(WinesResp.data))];\r\n                    case 2:\r\n                        error_1 = _a.sent();\r\n                        return [2 /*return*/, dispatch(getWinesError(error_1))];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\nexports.setWines = setWines;\r\nfunction getWineByIdSuccess(Wine) {\r\n    return { type: types.GET_WINE_BY_ID_SUCCESS, Wine: Wine };\r\n}\r\nexports.getWineByIdSuccess = getWineByIdSuccess;\r\nfunction getWineById(id) {\r\n    return function (dispatch) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var WinesResp, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, WineApi.GetWineById(id)];\r\n                    case 1:\r\n                        WinesResp = _a.sent();\r\n                        return [2 /*return*/, dispatch(getWineByIdSuccess(WinesResp.data))];\r\n                    case 2:\r\n                        error_2 = _a.sent();\r\n                        return [2 /*return*/, dispatch(getWineByIdError(error_2))];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\nexports.getWineById = getWineById;\r\nfunction winesisLoading(loading) {\r\n    return { type: types.WINES_IS_LOADING, iswinesLoading: loading };\r\n}\r\nexports.winesisLoading = winesisLoading;\r\n//# sourceMappingURL=WinesActions.js.map","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\LoginActions.js",["185","186","187","188","189","190"],"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.login = exports.userisLoading = exports.loginError = exports.loginSuccess = void 0;\r\nvar types = require(\"./actionTypes\");\r\nvar LoginApi = require(\"../../api/LoginApi\");\r\nvar loginErrorMessage = 'An error has occured while trying to Login: ';\r\nfunction loginSuccess(userData) {\r\n    return { type: types.LOGIN_SUCCESS, user: userData };\r\n}\r\nexports.loginSuccess = loginSuccess;\r\nfunction loginError(Error) {\r\n    return { type: types.LOGIN_ERROR, LoginError: { isError: Error && Error.isAxiosError !== undefined ? Error.isAxiosError : false, errorMessage: Error && Error.message !== undefined ? loginErrorMessage + Error.message : '' } };\r\n}\r\nexports.loginError = loginError;\r\nfunction userisLoading(loading) {\r\n    return { type: types.LOGIN_IS_LOADING, isLoading: loading };\r\n}\r\nexports.userisLoading = userisLoading;\r\nfunction login(LoginData) {\r\n    if (LoginData === null) {\r\n        return function (dispatch) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, dispatch(loginSuccess(LoginData))];\r\n                });\r\n            });\r\n        };\r\n    }\r\n    return function (dispatch) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var LoginResp, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, LoginApi.LoginUser(LoginData)];\r\n                    case 1:\r\n                        LoginResp = _a.sent();\r\n                        return [2 /*return*/, dispatch(loginSuccess(LoginResp.data))];\r\n                    case 2:\r\n                        error_1 = _a.sent();\r\n                        return [2 /*return*/, dispatch(loginError(error_1))];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n}\r\nexports.login = login;\r\n//# sourceMappingURL=LoginActions.js.map","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\utils\\ComboValues.js",["191"],"﻿export const wineBrands = ['JP', 'Monte Velho', 'Casal Garcia', 'Mula Velha', 'Porta da Ravessa', 'Muralhas', 'Pêra Doce', 'Pegões', 'Tapada Das Lebres', 'Guarda Rios', 'Gazela', 'Vidigueira', 'Papa Figos', 'Dona Ermelinda', 'Esteva']\r\nexport const wineTypes = ['Red', 'White', 'Green', 'Rose'];\r\nexport const wineRegions = ['Douro', 'Alentejo', 'Dão', 'Bairrada'];\r\nexport const wineSections = ['Warehouse 1', 'Warehouse 2', 'Warehouse 3', 'Warehouse 4', 'Warehouse 5', 'Warehouse 6', 'Warehouse 7'];\r\nexport const wineDivision = ['Division 1', 'Division 2', 'Division 3', 'Division 4', 'Division 5', 'Division 6', 'Division 7'];\r\nexport const beerBrands = ['Sagres', 'Super Bock', 'Cristal', 'Heineken', 'Carlsberg', 'Vadia', 'Estrela', 'Da Borda', 'Franziskaner', 'Tagos', 'Budweiser', 'ipa', 'Bud Light']\r\nexport const beerTypes = ['Blonde', 'Black', 'Artesanal'];\r\nexport const beerSections = ['Warehouse 1', 'Warehouse 2', 'Warehouse 3', 'Warehouse 4', 'Warehouse 5', 'Warehouse 6', 'Warehouse 7'];\r\nexport const beerDivision = ['Division 1', 'Division 2', 'Division 3', 'Division 4', 'Division 5', 'Division 6', 'Division 7'];","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\ErrorBoundary.tsx",["192","193","194","195"],"﻿import React, { useContext, createContext, useState } from \"react\";\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { ErrorBoundaryPropsInterface } from \"../WineInterfaces\";\r\n\r\nconst ErrorBoundary: React.FC<ErrorBoundaryPropsInterface> = props => {\r\n    const { Error, type, closeModal, getWinesError, getWineByIdError, AddWineError } = props;\r\n\r\n    return (<>\r\n        {Error !== undefined && Error !== null && Error.isError === true ?\r\n            <div style={{ width: '100%', height: '100%' }}>\r\n                <Accordion style={{ marginTop: '10%', width: '50%', marginLeft: '25%', marginBottom: '10%' }}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Something went wrong, see Details:</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            {Error.errorMessage}\r\n                        </Typography>\r\n\r\n                    </AccordionDetails>\r\n                    <button type=\"button\" id=\"LogginButton\" className='btn btn-primary' style={{ float: \"left\", marginLeft: '1%', marginBottom: '1%' }} onClick={() => {\r\n                        switch (type) {\r\n                            case 'list': { getWinesError(null); break; }\r\n                            case 'wine': {\r\n                                getWineByIdError(null);\r\n                                closeModal(); break;\r\n                            }\r\n                            case 'add': { AddWineError(null); break; }\r\n                        }\r\n                    }}>\r\n                        Close\r\n                    </button>\r\n                </Accordion>\r\n            </div>\r\n            : props.children}\r\n\r\n    </>);\r\n\r\n}\r\nexport default (ErrorBoundary);","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Modals\\AddWineModal.tsx",["196","197","198"],"﻿import React, { useState } from \"react\";\r\n//import logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as WineApi from \"../../../api/WineApi\"\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { AddWineFormInitialValues, AddWineModalPropsInterface } from \"../../WineInterfaces\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport AddWineForm from \"../Forms/AddWineForm\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\n\r\nconst AddWineModal: React.FC<AddWineModalPropsInterface | null> = props => {\r\n    const { showmodal, closeModal, getList, winesisLoading, iswinesLoading, getWinesError, getWineByIdError, AddWineError, addWineError } = props;\r\n    let [myFile, setMyFile] = useState<string | Blob>();\r\n    const handleSetMyFile = (file: File) => {\r\n        setMyFile(file)\r\n    }\r\n    const AddWine = (values: AddWineFormInitialValues, { setSubmitting }: any) => {\r\n        winesisLoading(true);\r\n        setSubmitting(true);\r\n        const headers = {\r\n            ContentType: \"application/json\"\r\n        };\r\n        var data = new FormData();\r\n        data.append(\"name\", values.name);\r\n        data.append(\"section\", values.section);\r\n        data.append(\"division\", values.division);\r\n        data.append(\"type\", values.type);\r\n        data.append(\"description\", values.description);\r\n        data.append(\"region\", values.region);\r\n        data.append(\"brand\", values.brand);\r\n        data.append(\"img\", myFile as string | Blob);\r\n        try {\r\n            WineApi.AddWine(data).then((resp: AxiosResponse | AxiosError) => {\r\n                if ((resp as AxiosResponse).data !== undefined) {\r\n                    var response = (resp as AxiosResponse).data;\r\n                    if (response.success == true) {\r\n\r\n                        getList();\r\n                        const ToastMsg = () => (\r\n                            <div style={{ fontSize: \"20px\" }}>\r\n                                {response.message}\r\n                            </div>);\r\n\r\n\r\n                        toast.success(<ToastMsg />, {\r\n                            position: toast.POSITION.TOP_CENTER,\r\n                        });\r\n\r\n                        winesisLoading(false);\r\n                        setSubmitting(false);\r\n                        closeModal();\r\n\r\n                    } else {\r\n                        closeModal();\r\n                        winesisLoading(false);\r\n                        setSubmitting(false);\r\n                        const ToastMsg = () => <div style={{ fontSize: \"20px\" }}>{response.message}</div>;\r\n                        toast.error(<ToastMsg />, {\r\n                            position: toast.POSITION.TOP_CENTER,\r\n\r\n                        });\r\n                    }\r\n                } else {\r\n                    if ((resp as AxiosError).isAxiosError === true) {\r\n\r\n                        winesisLoading(false);\r\n                        AddWineError(resp as AxiosError);\r\n                        setSubmitting(false);\r\n                    }\r\n\r\n                }\r\n            });\r\n        } catch (error) {\r\n            winesisLoading(false);\r\n            AddWineError(error as AxiosError);\r\n            setSubmitting(false);\r\n            //const ToastMsg = () => <div style={{ fontSize: \"20px\" }}>{error.message}</div>;\r\n            //toast.error(<ToastMsg />, {\r\n            //    position: toast.POSITION.TOP_CENTER,\r\n\r\n            //});\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Modal\r\n            show={showmodal}\r\n            onHide={closeModal}\r\n            size={'lg'}\r\n\r\n        >\r\n            <ErrorBoundary Error={addWineError} getWinesError={getWinesError} getWineByIdError={getWineByIdError} AddWineError={AddWineError} type='add' closeModal={closeModal}>\r\n                <LoadingOverlay active={iswinesLoading} spinner text={\"Loading...\"}>\r\n                    <Modal.Header closeButton>\r\n                        <h3 style={{ float: \"left\", marginLeft: '1%' }}>Add Wine</h3>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{ width: '100%' }}>\r\n                            <AddWineForm onSubmit={AddWine} loading={iswinesLoading} handleSetMyFile={handleSetMyFile} />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    </Modal.Footer>\r\n                </LoadingOverlay>\r\n            </ErrorBoundary >\r\n        </Modal>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\nexport default (AddWineModal);","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\MenuComponent.tsx",["199","200","201","202","203"],"﻿import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { toast } from \"react-toastify\";\r\nimport * as LoginApi from \"../../api/LoginApi\"\r\nimport '../../HomePage/HomePage.css';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\r\nimport { useHistory } from 'react-router'\r\nimport { MenuComponentPropsInterface } from '../../HomePage/HomePageInterfaces';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst MenuComponent: React.FC<MenuComponentPropsInterface> = props => {\r\n    const { user, login } = props;\r\n    let history = useHistory();\r\n    const showMenu = () => {\r\n        let menu = document.getElementById('navbarSupportedContent');\r\n        if (menu?.style.display === 'none') {\r\n            menu.style.display = 'block';\r\n        } else {\r\n            (menu as HTMLElement).style.display = 'none';\r\n        }\r\n\r\n    }\r\n\r\n    const logout = async () => {\r\n        sessionStorage.clear();\r\n        var data = new FormData();\r\n        data.append(\"Username\", user.Username as string);\r\n        data.append(\"Password\", user.Password as string);\r\n        data.append(\"Login\", \"false\");\r\n        try {\r\n            await login(data).then(resp => {\r\n\r\n                login(null);\r\n                toast.success(\"Adeus\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    toastId: \"logout-exit-message\"\r\n                });\r\n                history.push(\"/\");\r\n                //window.location.href=\"/\";\r\n\r\n\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            login(null);\r\n            toast.success(\"Adeus\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n            history.push(\"/\");\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand\" href=\"#\" style={{ pointerEvents: 'none' }}></a>\r\n                <button className=\"navbar-toggler\" onClick={showMenu} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <button type=\"submit\" onClick={() => { history.push('/Homepage') }} id=\"LogginButton\" className='btn btn-primary' style={{\r\n                        float: 'right', marginRight: '2%'\r\n                    }}>\r\n                        <ArrowBackIcon /> Back\r\n                    </button>\r\n                    <button type=\"submit\" onClick={logout} id=\"LogginButton\" className='btn btn-primary' style={{\r\n                        float: 'right', marginRight: '2%'\r\n                    }}>\r\n                        <ExitToAppIcon /> Sign Out\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"fadeIn first\">\r\n                <label style={{ width: '100%', marginTop: '5%', fontSize: '45px', color: 'rgb(159, 29, 65)' }}>CellarManager<LocalBarIcon style={{ marginLeft: '1%', marginBottom: '1%', fontSize: '45px', color: 'rgb(159, 29, 65)' }} /></label>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default (MenuComponent)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Modals\\WineDetailsModal.tsx",["204"],"﻿import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ModalImage from \"react-modal-image\";\r\nimport ErrorBoundary from '../ErrorBoundary'\r\nimport { WineDetailsModalPropsInterface } from \"../../WineInterfaces\";\r\nimport DetailsWineForm from \"../Forms/DetailsWineForm\";\r\n\r\nconst WineDetailsModal: React.FC<WineDetailsModalPropsInterface | null> = props => {\r\n    const { showmodal, closeModal, wine, getWinesError, getWineByIdError, AddWineError, WineError } = props;\r\n\r\n    return (\r\n\r\n        <Modal\r\n            show={showmodal}\r\n            onHide={closeModal}\r\n            size={'lg'}\r\n\r\n        >\r\n            <ErrorBoundary Error={WineError} getWinesError={getWinesError} getWineByIdError={getWineByIdError} AddWineError={AddWineError} type='wine' closeModal={closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <h3 style={{ float: \"left\", marginLeft: '1%' }}>Wine Details:</h3>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-md-6'>\r\n                            {wine!== undefined && wine !== null && wine.img ? <ModalImage\r\n                                small={\"/img/Wine/\" + wine.img}\r\n                                large={\"/img/Wine/\" + wine.img}\r\n                                alt={wine.img}\r\n                            /> : null}</div>\r\n                        <div className='col-md-6'> {wine !== undefined && wine !== null && wine.img !== undefined ? <DetailsWineForm wineDetails={wine} /> : null} </div>\r\n                    </div>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </ErrorBoundary >\r\n        </Modal>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\nexport default (WineDetailsModal);","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\table\\WineTableComponent.tsx",["205","206","207","208","209","210","211","212"],"﻿import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { toast } from \"react-toastify\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme, fade } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { wineModel, WineResponse, WineTablePropsInterface } from \"../../WineInterfaces\";\r\nfunction descendingComparator(a: any, b: any, orderBy: any) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order: string, orderBy: string) {\r\n    return order === \"desc\"\r\n        ? (a: any, b: any) => descendingComparator(a, b, orderBy)\r\n        : (a: any, b: any) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array: wineModel[], comparator: any) {\r\n    const stabilizedThis = array.map((el: any, index) => [el, index]);\r\n    stabilizedThis.sort((a: any, b: any) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\nconst useStyles1 = makeStyles(theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n        overflow: \"unset\"\r\n    }\r\n}));\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\"\r\n        }\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: \"auto\"\r\n        }\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\"\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"12ch\",\r\n            \"&:focus\": {\r\n                width: \"20ch\"\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nfunction TablePaginationActions(props: any) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event: any) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event: any) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event: any) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event: any) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? (\r\n                    <KeyboardArrowRight />\r\n                ) : (\r\n                    <KeyboardArrowLeft />\r\n                )}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? (\r\n                    <KeyboardArrowLeft />\r\n                ) : (\r\n                    <KeyboardArrowRight />\r\n                )}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired\r\n};\r\nconst useStyles2 = makeStyles({\r\n    table: {\r\n        minWidth: 500,\r\n        fontSize: 14\r\n    },\r\n    head: {\r\n        backgroundColor: \"#3498DB\",\r\n        color: \"white\"\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    icon: {\r\n        color: \"#3498DB\"\r\n    },\r\n    dialogButton: {\r\n        color: \"#3498DB\"\r\n    },\r\n    dialogText: {\r\n        color: \"#3498DB\"\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1\r\n    }\r\n});\r\n\r\nconst WineTableComponent: React.FC<WineTablePropsInterface | null> = props => {\r\n    const { list, getWineById, showLoader, closeLoader, showEditModal } = props;\r\n    const classes = useStyles2();\r\n    const [order, setOrder] = useState(\"desc\");\r\n    const [orderBy, setOrderBy] = useState(\"id\");\r\n    const [page, setPage] = useState(0);\r\n    const emptyArray: any = [];\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows =\r\n        rowsPerPage - Math.min(rowsPerPage, list as any - page * rowsPerPage) as any;\r\n    const handleChangePage = (event: any, newPage: any) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: any) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const getTableWineById = async (id: string) => {\r\n        showLoader();\r\n        try {\r\n            await getWineById(id).then((resp: WineResponse) => {\r\n                showEditModal();\r\n                closeLoader();\r\n            });\r\n\r\n        }\r\n        catch (ex) {\r\n            closeLoader();\r\n            toast.error(\"ocorreu um erro\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                    <TableHead style={{ backgroundColor: \"#9F1D41\" }}>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Image</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Name</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Description</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Brand</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Type</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Reference</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Region</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Division</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Section</label>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <label style={{ color: \"white\" }}>Check Detail</label>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {(list.length ? list : emptyArray)\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row: wineModel, index: number) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell align=\"center\" style={{ width: \"150px\" }}>\r\n                                        <ModalImage\r\n                                            small={\"/img/Wine/\" + row.img}\r\n                                            large={\"/img/Wine/\" + row.img}\r\n                                            alt={row.img}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.name}</TableCell>\r\n                                    <TableCell align=\"right\">{row.description}</TableCell>\r\n                                    <TableCell align=\"right\">{row.brand}</TableCell>\r\n                                    <TableCell align=\"right\">{row.type}</TableCell>\r\n                                    <TableCell align=\"right\">{row.reference}</TableCell>\r\n                                    <TableCell align=\"right\">{row.region}</TableCell>\r\n                                    <TableCell align=\"right\">{row.division}</TableCell>\r\n                                    <TableCell align=\"right\">{row.section}</TableCell>\r\n                                    <TableCell align=\"right\">  <button id={row.id} type=\"button\"\r\n                                        className=\"btn btn-primary\" onClick={() => { getTableWineById(row.id) }} style={{ backgroundColor: \"#9F1D41\" }}>\r\n                                        <VisibilityIcon style={{ fontSize: '20px' }} />\r\n                                    </button></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        {list.length ? list.length === 0 && (\r\n                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                <TableCell colSpan={8}>\r\n                                    <label style={{ marginLeft: \"42%\" }}>No results</label>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ) : (<TableRow style={{ height: 53 * emptyRows }}>\r\n                            <TableCell colSpan={8}>\r\n                                <label style={{ marginLeft: \"42%\" }}>No results</label>\r\n                            </TableCell>\r\n                        </TableRow>)}\r\n                    </TableBody>\r\n                    <TableFooter>\r\n                        <TableRow>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n                                colSpan={3}\r\n                                count={list.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                                    native: true\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WineTableComponent;","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\components\\ErrorBoundary.tsx",["213","214","215","216"],"﻿import React, { useContext, createContext, useState } from \"react\";\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { ErrorBoundaryPropsInterface } from \"../LoginInterfaces\";\r\n\r\nconst ErrorBoundary: React.FC<ErrorBoundaryPropsInterface> = props =>\r\n{\r\n    const { Error, loginError } = props;\r\n\r\n    return (<>\r\n        {Error !== undefined && Error!== null && Error.isError === true ?\r\n            <div style={{ width: '100%', height: '100%' }}>\r\n                <Accordion style={{ marginTop: '25%', width: '50%', marginLeft: '25%' }}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                        <Typography>Something went wrong, see Details:</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            {Error.errorMessage}\r\n                        </Typography>\r\n\r\n                    </AccordionDetails>\r\n                    <button type=\"button\" id=\"LogginButton\" className='btn btn-primary' style={{ float: \"left\", marginLeft: '1%', marginBottom: '1%' }} onClick={() => { loginError(null); }}>\r\n                        Close\r\n                    </button>\r\n                </Accordion>\r\n            </div>\r\n            : props.children}\r\n\r\n    </>);\r\n\r\n}\r\nexport default (ErrorBoundary);","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\HomePage\\components\\MenuComponent.tsx",["217","218","219","220","221","222"],"﻿import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport * as LoginApi from \"../../api/LoginApi\"\r\nimport '../../HomePage/HomePage.css';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\r\nimport { useHistory } from 'react-router'\r\nimport { MenuComponentPropsInterface } from '../HomePageInterfaces';\r\n\r\n\r\nconst MenuComponent: React.FC<MenuComponentPropsInterface> = props =>\r\n{\r\n    const { user, login } = props;\r\n    let history = useHistory();\r\n    const showMenu = () =>\r\n    {\r\n        let menu = document.getElementById('navbarSupportedContent');\r\n        if (menu?.style.display === 'none')\r\n        {\r\n            menu.style.display = 'block';\r\n        } else\r\n        {\r\n            (menu as HTMLElement).style.display = 'none';\r\n        }\r\n\r\n    }\r\n\r\n    const logout = async () =>\r\n    {\r\n        sessionStorage.clear();\r\n        var data = new FormData();\r\n        data.append(\"Username\", user.Username as string);\r\n        data.append(\"Password\", user.Password as string);\r\n        data.append(\"Login\", \"false\");\r\n        try\r\n        {\r\n            await login(data).then(resp =>\r\n            {\r\n\r\n                login(null);\r\n                toast.success(\"Adeus\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    toastId: \"logout-exit-message\"\r\n                });\r\n                history.push(\"/\");\r\n                //window.location.href=\"/\";\r\n\r\n\r\n            })\r\n\r\n\r\n        } catch (error)\r\n        {\r\n            login(null);\r\n            toast.success(\"Adeus\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                toastId: \"logout-exit-message\"\r\n            });\r\n            history.push(\"/\");\r\n        }\r\n\r\n    };\r\n      return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand\" href=\"#\" style={{ pointerEvents: 'none' }}></a>\r\n                <button className=\"navbar-toggler\" onClick={showMenu} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <button type=\"submit\" onClick={logout} id=\"LogginButton\" className='btn btn-primary' style={{\r\n                        float: 'right', marginRight: '2%'\r\n                    }}>\r\n                        <ExitToAppIcon /> Sign Out\r\n                                </button>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"fadeIn first\">\r\n                <label style={{ width: '100%', marginTop: '5%', fontSize: '45px', color: 'rgb(159, 29, 65)' }}>CellarManager<LocalBarIcon style={{ marginLeft: '1%', marginBottom: '1%', fontSize: '45px', color: 'rgb(159, 29, 65)' }} /></label>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default (MenuComponent)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Login\\components\\form\\loginForm.tsx",["223","224","225","226","227","228","229","230","231"],"﻿import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { loginFormPropsInterface, loginFormInitialValuesInterface } from \"../../LoginInterfaces\";\r\nimport TextField from '@material-ui/core/TextField'\r\nimport\r\n{\r\n    Formik, Form, Field, ErrorMessage,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport\r\n{\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme,\r\n} from '@material-ui/core/styles';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-input': {\r\n            color: 'black',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.MuiFormControl-root ': {\r\n            minWidth: '300px',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n                color: 'black'\r\n            },\r\n\r\n\r\n        },\r\n    },\r\n})(TextField);\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst LoginForm: React.FC<loginFormPropsInterface> = (props) =>\r\n{\r\n    const { onSubmit, loading } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: '', password: '' } as loginFormInitialValuesInterface}\r\n            onSubmit={onSubmit}\r\n\r\n            validationSchema={Yup.object().shape({\r\n                username: Yup.string()\r\n                    .required('Required'),\r\n                password: Yup.string()\r\n                    .required('Required')\r\n            })}\r\n        >\r\n            {(props) =>\r\n            {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    dirty,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    handleReset,\r\n                } = props;\r\n                return (\r\n                    <form onSubmit={handleSubmit} style={{ marginTop: '5%' }}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <CssTextField\r\n                                label={\"Username\"}\r\n                                className={classes.margin}\r\n                                name=\"username\"\r\n                                placeholder={\"Username\"}\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                value={values.username}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={((errors.username && touched.username) && errors.username) as boolean}\r\n                                helperText={(errors.username && touched.username) && errors.username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <CssTextField\r\n                                label={\"Password\"}\r\n                                className={classes.margin}\r\n                                name=\"password\"\r\n                                placeholder={\"Password\"}\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={((errors.password && touched.password) && errors.password) as boolean}\r\n                                helperText={(errors.password && touched.password) && errors.password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" id=\"LogginButton\" className='btn btn-primary' disabled={isSubmitting}>\r\n                                Sign in\r\n                </button>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{ marginTop: \"5%\" }}>\r\n                            <ClipLoader color={\"#9F1D41\"} loading={loading} size={100} />\r\n                        </div>\r\n                    </form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default (LoginForm)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\actions\\actionTypes.js",["232"],"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WINES_IS_LOADING = exports.ADD_WINE_ERROR = exports.GET_WINE_BY_ID_ERROR = exports.GET_WINE_BY_ID_SUCCESS = exports.GET_WINES_ERROR = exports.GET_WINES_SUCCESS = exports.BEERS_IS_LOADING = exports.ADD_BEER_ERROR = exports.GET_BEER_BY_ID_ERROR = exports.GET_BEER_BY_ID_SUCCESS = exports.GET_BEERS_ERROR = exports.GET_BEERS_SUCCESS = exports.LOGIN_IS_LOADING = exports.LOGIN_ERROR = exports.LOGIN_SUCCESS = void 0;\r\n//Login Actions\r\n////////////////////////////////////////////////////////////////////\r\nexports.LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.LOGIN_ERROR = \"LOGIN_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.LOGIN_IS_LOADING = \"LOGIN_IS_LOADING\";\r\n//Beer Actions\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_BEERS_SUCCESS = \"GET_BEERS_SUCCESS\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_BEERS_ERROR = \"GET_BEERS_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_BEER_BY_ID_SUCCESS = \"GET_BEER_BY_ID_SUCCESS\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_BEER_BY_ID_ERROR = \"GET_BEER_BY_ID_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.ADD_BEER_ERROR = \"ADD_BEER_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.BEERS_IS_LOADING = \"BEERS_IS_LOADING\";\r\n//Wine Actions\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_WINES_SUCCESS = \"GET_WINES_SUCCESS\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_WINES_ERROR = \"GET_WINES_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_WINE_BY_ID_SUCCESS = \"GET_WINE_BY_ID_SUCCESS\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.GET_WINE_BY_ID_ERROR = \"GET_WINE_BY_ID_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.ADD_WINE_ERROR = \"ADD_WINE_ERROR\";\r\n////////////////////////////////////////////////////////////////////\r\nexports.WINES_IS_LOADING = \"WINES_IS_LOADING\";\r\n//# sourceMappingURL=actionTypes.js.map","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\LoginApi.tsx",["233"],"﻿import { handleResponse, handleError } from \"./apiUtils\";\r\nimport axios from \"axios\";\r\nconst ApiEndPoint: string = process.env.REACT_APP_API_KEY_URI as string;\r\n\r\nexport function LoginUser(LoginBody: FormData)\r\n{\r\n    return axios.post(ApiEndPoint + `Login`, LoginBody)\r\n        .then(handleResponse)\r\n        .catch(handleError);\r\n}","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\WineApi.tsx",["234"],"﻿import { handleResponse, handleError } from \"./apiUtils\";\r\nimport axios from \"axios\";\r\nimport { wineFilters } from \"../Wine/WineInterfaces\";\r\n\r\nconst ApiEndPoint: string = process.env.REACT_APP_API_KEY_URI as string;\r\n\r\nexport function GetWines(filters: wineFilters) {\r\n    return axios.get(ApiEndPoint + `Wine`, { headers: { filters: JSON.stringify(filters) } })\r\n        .then(handleResponse)\r\n        .catch(handleError);\r\n}\r\nexport function GetWineById(id: string) {\r\n    return axios.get(ApiEndPoint + `Wine/${id}`)\r\n        .then(handleResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nexport function AddWine(wineData: FormData) {\r\n    return axios.post(ApiEndPoint + `Wine`, wineData)\r\n        .then(handleResponse)\r\n        .catch((error) => { return error });\r\n}","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\index.tsx",["235"],"﻿import { combineReducers } from \"redux\";\r\nimport { Login, userIsLoading, LoginError } from './Login/LoginReducer';\r\nimport { WinesError, winesIsLoading, Wines, AddWineError, Wine, WineError } from \"./Wines/WinesReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    Login,\r\n    userIsLoading,\r\n    LoginError,\r\n    WinesError,\r\n    winesIsLoading,\r\n    Wines,\r\n    AddWineError,\r\n    Wine,\r\n    WineError\r\n});\r\n\r\nexport default rootReducer;","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Forms\\DetailsWineForm.tsx",["236"],"﻿import React from \"react\";\r\nimport {\r\nwithStyles,\r\nmakeStyles,\r\n} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { DetailsWineFormPropsInterface } from \"../../WineInterfaces\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-input': {\r\n            color: 'black',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.MuiFormControl-root ': {\r\n            minWidth: '300px',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n                color: 'black'\r\n            },\r\n\r\n\r\n        },\r\n    },\r\n})(TextField);\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\nconst DetailsWineForm: React.FC<DetailsWineFormPropsInterface | null> = props => {\r\n    const { wineDetails } = props\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Name\"}\r\n                    className={classes.margin}\r\n                    name=\"name\"\r\n                    disabled\r\n                    placeholder={\"Name\"}\r\n                    variant=\"filled\"\r\n                    type=\"text\"\r\n                    value={wineDetails.name}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Description\"}\r\n                    className={classes.margin}\r\n                    name=\"description\"\r\n                    placeholder={\"Description\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.description}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Reference\"}\r\n                    className={classes.margin}\r\n                    name=\"reference\"\r\n                    placeholder={\"Reference\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.reference}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Brand\"}\r\n                    className={classes.margin}\r\n                    name=\"brand\"\r\n                    placeholder={\"Brand\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.brand}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Type\"}\r\n                    className={classes.margin}\r\n                    name=\"type\"\r\n                    placeholder={\"Type\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.type}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Region\"}\r\n                    className={classes.margin}\r\n                    name=\"region\"\r\n                    placeholder={\"Region\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.region}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Section\"}\r\n                    className={classes.margin}\r\n                    name=\"section\"\r\n                    placeholder={\"Section\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.section}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <CssTextField\r\n                    label={\"Division\"}\r\n                    className={classes.margin}\r\n                    name=\"division\"\r\n                    placeholder={\"Division\"}\r\n                    disabled\r\n                    type=\"text\"\r\n                    variant=\"filled\"\r\n                    value={wineDetails.division}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default (DetailsWineForm)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\Wine\\components\\Forms\\AddWineForm.tsx",["237"],"﻿import React, { useState } from \"react\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Select from '@material-ui/core/Select'\r\nimport { styled } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport { wineBrands, wineTypes, wineRegions, wineSections, wineDivision } from '../../../utils/ComboValues'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {\r\nFormik\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\nwithStyles,\r\nmakeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { AddWineFormInitialValues, AddWineFormPropsInterface } from \"../../WineInterfaces\";\r\nconst CssSelect = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-input': {\r\n            color: 'black',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.MuiFormControl-root ': {\r\n            minWidth: '600px',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n                color: 'black'\r\n            },\r\n\r\n\r\n        },\r\n    },\r\n})(Select);\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'black',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-input': {\r\n            color: 'black',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.MuiFormControl-root ': {\r\n            minWidth: '300px',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'black',\r\n                color: 'black'\r\n            },\r\n\r\n\r\n        },\r\n    },\r\n})(TextField);\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'block'\r\n    }\r\n}));\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\nconst AddWineForm: React.FC<AddWineFormPropsInterface> = (props) => {\r\n    const { onSubmit, handleSetMyFile } = props;\r\n    const classes = useStyles();\r\n    const [imgName, setImgName] = useState('');\r\n    return (\r\n        <Formik\r\n            initialValues={{ name: '', description: '', brand: '', type: '', region: '', section: '', division: '' } as AddWineFormInitialValues}\r\n            onSubmit={onSubmit}\r\n\r\n            validationSchema={Yup.object().shape({\r\n                name: Yup.string()\r\n                    .required('Required'),\r\n                description: Yup.string()\r\n                    .required('Required'),\r\n                brand: Yup.string()\r\n                    .required('Required'),\r\n                type: Yup.string()\r\n                    .required('Required'),\r\n                region: Yup.string()\r\n                    .required('Required'),\r\n                section: Yup.string()\r\n                    .required('Required'),\r\n                division: Yup.string()\r\n                    .required('Required'),\r\n            })}\r\n        >\r\n            {(props) => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                } = props;\r\n                const myFileOnchange = (e: any) => {\r\n                    var file = e.target.files[0];\r\n                    handleSetMyFile(file);\r\n                    setImgName(file.name);\r\n                }\r\n                return (\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n                        <div className=\"form-group formInput\">\r\n                            <CssTextField\r\n                                label={\"Name\"}\r\n                                className={classes.margin}\r\n                                name=\"name\"\r\n                                placeholder={\"Name\"}\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={((errors.name && touched.name) && errors.name) as boolean}\r\n                                helperText={(errors.name && touched.name) && errors.name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group formInput\">\r\n                            <CssTextField\r\n                                label={\"Description\"}\r\n                                className={classes.margin}\r\n                                name=\"description\"\r\n                                placeholder={\"Description\"}\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                value={values.description}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={((errors.description && touched.description) && errors.description) as boolean}\r\n                                helperText={(errors.description && touched.description) && errors.description}\r\n                            />\r\n                        </div>\r\n                        <div style={{ marginLeft: '2%' }}>\r\n                            <div className=\"form-group\">\r\n                                <InputLabel htmlFor=\"color-native-simple\" style={{ marginLeft: '30%' }}>Select Brand</InputLabel>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                <CssSelect\r\n                                    value={values.brand}\r\n                                    onChange={handleChange}\r\n                                    style={{ width: 300 }}\r\n                                    name=\"brand\"\r\n                                    placeholder={\"Brand\"}\r\n                                    onBlur={handleBlur}\r\n                                    inputProps={{ style: { width: 300 } }}\r\n                                    error={((errors.brand && touched.brand) && errors.brand) as boolean}\r\n                                >\r\n                                    <MenuItem value=\"\"> </MenuItem>\r\n                                    {wineBrands.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                </CssSelect>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <InputLabel htmlFor=\"color-native-simple\" style={{ marginLeft: '30%' }}>Select Type</InputLabel>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                <CssSelect\r\n                                    value={values.type}\r\n                                    onChange={handleChange}\r\n                                    name=\"type\"\r\n                                    style={{ width: 300 }}\r\n                                    placeholder={\"Type\"}\r\n                                    inputProps={{ style: { width: 300 } }}\r\n                                    onBlur={handleBlur}\r\n                                    error={((errors.type && touched.type) && errors.type) as boolean}\r\n                                >\r\n                                    <MenuItem value=\"\"> </MenuItem>\r\n                                    {wineTypes.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                </CssSelect>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <InputLabel htmlFor=\"color-native-simple\" style={{ marginLeft: '30%' }}>Select Region</InputLabel>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                <CssSelect\r\n                                    value={values.region}\r\n                                    onChange={handleChange}\r\n                                    name=\"region\"\r\n                                    placeholder={\"Region\"}\r\n                                    style={{ width: 300 }}\r\n                                    inputProps={{ style: { width: 300 } }}\r\n                                    onBlur={handleBlur}\r\n                                    error={((errors.region && touched.region) && errors.region) as boolean}\r\n                                >\r\n                                    <MenuItem value=\"\"> </MenuItem>\r\n                                    {wineRegions.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                </CssSelect>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <InputLabel htmlFor=\"color-native-simple\" style={{ marginLeft: '30%' }}>Select Section</InputLabel>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                <CssSelect\r\n                                    value={values.section}\r\n                                    onChange={handleChange}\r\n                                    inputProps={{ style: { width: 300 } }}\r\n                                    name=\"section\"\r\n                                    style={{ width: 300 }}\r\n                                    placeholder={\"Section\"}\r\n                                    onBlur={handleBlur}\r\n                                    error={((errors.section && touched.section) && errors.section) as boolean}\r\n                                >\r\n                                    <MenuItem value=\"\"> </MenuItem>\r\n                                    {wineSections.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                </CssSelect>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <InputLabel htmlFor=\"color-native-simple\" style={{ marginLeft: '30%' }}>Select Division</InputLabel>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                <CssSelect\r\n                                    value={values.division}\r\n                                    inputProps={{ style: { width: 300 } }}\r\n                                    onChange={handleChange}\r\n                                    name=\"division\"\r\n                                    placeholder={\"Division\"}\r\n                                    style={{ width: 300 }}\r\n                                    onBlur={handleBlur}\r\n                                    error={((errors.division && touched.division) && errors.division) as boolean}\r\n                                >\r\n                                    <MenuItem value=\"\"> </MenuItem>\r\n                                    {wineDivision.map((item, index) => { return <MenuItem value={item} key={index}> {item} </MenuItem> })}\r\n                                </CssSelect>\r\n                            </div>\r\n\r\n                            <div className=\"form-group formInput\">\r\n                                <Input accept=\"image/*\" required className={classes.input} id=\"icon-button-file\" name=\"img\"\r\n                                    type=\"file\" onChange={myFileOnchange} />\r\n\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <PhotoCamera />\r\n                                    </IconButton>\r\n                                </label>\r\n                                <label style={{ color: 'black' }}>*Required Field</label>\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n                                {imgName !== null && <label style={{ color: 'black', marginTop: '-5%', marginLeft: '4%' }}>{imgName}</label>}\r\n                            </div>\r\n                            <div className=\"form-group formInput\">\r\n\r\n                                <button type=\"submit\" id=\"AddWineButton\" className='btn btn-primary' style={{ backgroundColor: 'rgb(159, 29, 65)', width: 100 }} disabled={isSubmitting}>\r\n                                    Add  <AddCircleIcon />\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\n\r\nexport default (AddWineForm)","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\api\\apiUtils.tsx",["238"],"﻿import { AxiosError, AxiosResponse } from \"axios\";\r\n\r\nexport async function handleResponse(response: AxiosResponse)\r\n{\r\n    if (response.status === 200) return response;\r\n    if (response.status === 400)\r\n    {\r\n        // So, a server-side validation error occurred.\r\n        // Server side validation returns a string error message, so parse as text instead of json.\r\n        const error = await response.data;\r\n        throw new Error(error);\r\n    }\r\n    throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error:AxiosError)\r\n{\r\n    // eslint-disable-next-line no-console\r\n    console.error(\"API call failed. \" + error);\r\n    throw error;\r\n}","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\Wines\\WinesReducer.js",["239"],"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Wine = exports.WineError = exports.AddWineError = exports.winesIsLoading = exports.WinesError = exports.Wines = void 0;\r\nvar types = require(\"../../actions/actionTypes\");\r\nfunction Wines(state, action) {\r\n    if (state === void 0) { state = []; }\r\n    switch (action.type) {\r\n        case types.GET_WINES_SUCCESS: {\r\n            return action.Wines;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.Wines = Wines;\r\nfunction WinesError(state, action) {\r\n    if (state === void 0) { state = []; }\r\n    switch (action.type) {\r\n        case types.GET_WINES_ERROR: {\r\n            return action.WinesError;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.WinesError = WinesError;\r\nfunction winesIsLoading(state, action) {\r\n    if (state === void 0) { state = false; }\r\n    switch (action.type) {\r\n        case types.WINES_IS_LOADING:\r\n            return action.iswinesLoading;\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.winesIsLoading = winesIsLoading;\r\nfunction AddWineError(state, action) {\r\n    if (state === void 0) { state = false; }\r\n    switch (action.type) {\r\n        case types.ADD_WINE_ERROR: {\r\n            return action.AddWineError;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.AddWineError = AddWineError;\r\nfunction WineError(state, action) {\r\n    if (state === void 0) { state = []; }\r\n    switch (action.type) {\r\n        case types.GET_WINE_BY_ID_ERROR: {\r\n            return action.WineError;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.WineError = WineError;\r\nfunction Wine(state, action) {\r\n    if (state === void 0) { state = []; }\r\n    switch (action.type) {\r\n        case types.GET_WINE_BY_ID_SUCCESS: {\r\n            return action.Wine;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexports.Wine = Wine;\r\n//# sourceMappingURL=WinesReducer.js.map","C:\\Users\\pmvid\\source\\repos\\streamProject\\streamProject\\ClientApp\\src\\redux\\reducers\\Login\\LoginReducer.tsx",["240"],"﻿import { ErrorBoundaryInterface, LoginReduxModel } from \"../../../Login/LoginInterfaces\";\r\nimport * as types from \"../../actions/actionTypes\"\r\nexport function Login(state = null, action:any)\r\n{\r\n    switch (action.type)\r\n    {\r\n        case types.LOGIN_SUCCESS: {\r\n\r\n            return action.user as LoginReduxModel\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport function LoginError(state = [], action:any)\r\n{\r\n    switch (action.type)\r\n    {\r\n        case types.LOGIN_ERROR: {\r\n\r\n            return action.LoginError as ErrorBoundaryInterface\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\nexport function userIsLoading(state = false, action:any)\r\n{\r\n    switch (action.type)\r\n    {\r\n        case types.LOGIN_IS_LOADING:\r\n            return action.isLoading as boolean;\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":83,"column":37,"nodeType":"247","messageId":"248","endLine":83,"endColumn":39},{"ruleId":"245","severity":1,"message":"246","line":83,"column":136,"nodeType":"247","messageId":"248","endLine":83,"endColumn":138},{"ruleId":"249","severity":1,"message":"250","line":8,"column":5,"nodeType":"251","messageId":"252","endLine":8,"endColumn":9},{"ruleId":"249","severity":1,"message":"253","line":10,"column":5,"nodeType":"251","messageId":"252","endLine":10,"endColumn":15},{"ruleId":"249","severity":1,"message":"254","line":11,"column":5,"nodeType":"251","messageId":"252","endLine":11,"endColumn":16},{"ruleId":"249","severity":1,"message":"255","line":19,"column":10,"nodeType":"251","messageId":"252","endLine":19,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":1,"column":1,"nodeType":"258","messageId":"259","endLine":1,"endColumn":14,"fix":"260"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"265"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"266"},{"ruleId":"249","severity":1,"message":"267","line":2,"column":18,"nodeType":"251","messageId":"252","endLine":2,"endColumn":36},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"268"},{"ruleId":"249","severity":1,"message":"267","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":28},{"ruleId":"249","severity":1,"message":"254","line":6,"column":22,"nodeType":"251","messageId":"252","endLine":6,"endColumn":33},{"ruleId":"249","severity":1,"message":"269","line":41,"column":11,"nodeType":"251","messageId":"252","endLine":41,"endColumn":21},{"ruleId":"249","severity":1,"message":"270","line":44,"column":11,"nodeType":"251","messageId":"252","endLine":44,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"271"},{"ruleId":"249","severity":1,"message":"272","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":27},{"ruleId":"249","severity":1,"message":"273","line":1,"column":29,"nodeType":"251","messageId":"252","endLine":1,"endColumn":42},{"ruleId":"249","severity":1,"message":"274","line":1,"column":44,"nodeType":"251","messageId":"252","endLine":1,"endColumn":52},{"ruleId":"249","severity":1,"message":"275","line":5,"column":17,"nodeType":"251","messageId":"252","endLine":5,"endColumn":31},{"ruleId":"249","severity":1,"message":"276","line":10,"column":64,"nodeType":"251","messageId":"252","endLine":10,"endColumn":87},{"ruleId":"249","severity":1,"message":"277","line":14,"column":22,"nodeType":"251","messageId":"252","endLine":14,"endColumn":28},{"ruleId":"249","severity":1,"message":"278","line":15,"column":5,"nodeType":"251","messageId":"252","endLine":15,"endColumn":11},{"ruleId":"249","severity":1,"message":"279","line":16,"column":5,"nodeType":"251","messageId":"252","endLine":16,"endColumn":10},{"ruleId":"249","severity":1,"message":"250","line":17,"column":5,"nodeType":"251","messageId":"252","endLine":17,"endColumn":9},{"ruleId":"249","severity":1,"message":"280","line":18,"column":5,"nodeType":"251","messageId":"252","endLine":18,"endColumn":13},{"ruleId":"249","severity":1,"message":"254","line":20,"column":5,"nodeType":"251","messageId":"252","endLine":20,"endColumn":16},{"ruleId":"249","severity":1,"message":"281","line":23,"column":29,"nodeType":"251","messageId":"252","endLine":23,"endColumn":41},{"ruleId":"249","severity":1,"message":"282","line":45,"column":15,"nodeType":"251","messageId":"252","endLine":45,"endColumn":22},{"ruleId":"283","severity":1,"message":"284","line":59,"column":55,"nodeType":"285","messageId":"264","endLine":59,"endColumn":57},{"ruleId":"286","severity":1,"message":"287","line":105,"column":8,"nodeType":"288","endLine":105,"endColumn":10,"suggestions":"289"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":1,"nodeType":"258","messageId":"259","endLine":1,"endColumn":14,"fix":"290"},{"ruleId":"291","severity":1,"message":"292","line":13,"column":70,"nodeType":"293","messageId":"294","endLine":13,"endColumn":71},{"ruleId":"291","severity":1,"message":"292","line":18,"column":22,"nodeType":"293","messageId":"294","endLine":18,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":19,"column":22,"nodeType":"293","messageId":"294","endLine":19,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":66,"column":17,"nodeType":"297","messageId":"298","endLine":77,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":68,"column":38,"nodeType":"288","messageId":"301","endLine":68,"endColumn":49},{"ruleId":"295","severity":1,"message":"296","line":92,"column":17,"nodeType":"297","messageId":"298","endLine":103,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":94,"column":38,"nodeType":"288","messageId":"301","endLine":94,"endColumn":49},{"ruleId":"256","severity":1,"message":"257","line":1,"column":1,"nodeType":"258","messageId":"259","endLine":1,"endColumn":14,"fix":"302"},{"ruleId":"291","severity":1,"message":"292","line":13,"column":70,"nodeType":"293","messageId":"294","endLine":13,"endColumn":71},{"ruleId":"291","severity":1,"message":"292","line":18,"column":22,"nodeType":"293","messageId":"294","endLine":18,"endColumn":23},{"ruleId":"291","severity":1,"message":"292","line":19,"column":22,"nodeType":"293","messageId":"294","endLine":19,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":69,"column":17,"nodeType":"297","messageId":"298","endLine":80,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":71,"column":38,"nodeType":"288","messageId":"301","endLine":71,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"303"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"304"},{"ruleId":"249","severity":1,"message":"272","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":27},{"ruleId":"249","severity":1,"message":"273","line":1,"column":29,"nodeType":"251","messageId":"252","endLine":1,"endColumn":42},{"ruleId":"249","severity":1,"message":"274","line":1,"column":44,"nodeType":"251","messageId":"252","endLine":1,"endColumn":52},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"305"},{"ruleId":"249","severity":1,"message":"282","line":24,"column":15,"nodeType":"251","messageId":"252","endLine":24,"endColumn":22},{"ruleId":"283","severity":1,"message":"284","line":40,"column":42,"nodeType":"285","messageId":"264","endLine":40,"endColumn":44},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"306"},{"ruleId":"249","severity":1,"message":"307","line":4,"column":13,"nodeType":"251","messageId":"252","endLine":4,"endColumn":21},{"ruleId":"249","severity":1,"message":"308","line":12,"column":7,"nodeType":"251","messageId":"252","endLine":12,"endColumn":16},{"ruleId":"309","severity":1,"message":"310","line":71,"column":17,"nodeType":"311","endLine":71,"endColumn":88},{"ruleId":"312","severity":1,"message":"313","line":71,"column":17,"nodeType":"311","endLine":71,"endColumn":88},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"314"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"315"},{"ruleId":"249","severity":1,"message":"316","line":32,"column":10,"nodeType":"251","messageId":"252","endLine":32,"endColumn":23},{"ruleId":"249","severity":1,"message":"317","line":38,"column":10,"nodeType":"251","messageId":"252","endLine":38,"endColumn":20},{"ruleId":"249","severity":1,"message":"308","line":54,"column":7,"nodeType":"251","messageId":"252","endLine":54,"endColumn":16},{"ruleId":"249","severity":1,"message":"318","line":212,"column":12,"nodeType":"251","messageId":"252","endLine":212,"endColumn":17},{"ruleId":"249","severity":1,"message":"319","line":212,"column":19,"nodeType":"251","messageId":"252","endLine":212,"endColumn":27},{"ruleId":"249","severity":1,"message":"320","line":213,"column":12,"nodeType":"251","messageId":"252","endLine":213,"endColumn":19},{"ruleId":"249","severity":1,"message":"321","line":213,"column":21,"nodeType":"251","messageId":"252","endLine":213,"endColumn":31},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"322"},{"ruleId":"249","severity":1,"message":"272","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":27},{"ruleId":"249","severity":1,"message":"273","line":1,"column":29,"nodeType":"251","messageId":"252","endLine":1,"endColumn":42},{"ruleId":"249","severity":1,"message":"274","line":1,"column":44,"nodeType":"251","messageId":"252","endLine":1,"endColumn":52},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"323"},{"ruleId":"249","severity":1,"message":"324","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":20},{"ruleId":"249","severity":1,"message":"275","line":3,"column":17,"nodeType":"251","messageId":"252","endLine":3,"endColumn":31},{"ruleId":"249","severity":1,"message":"307","line":4,"column":13,"nodeType":"251","messageId":"252","endLine":4,"endColumn":21},{"ruleId":"309","severity":1,"message":"310","line":67,"column":17,"nodeType":"311","endLine":67,"endColumn":88},{"ruleId":"312","severity":1,"message":"313","line":67,"column":17,"nodeType":"311","endLine":67,"endColumn":88},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"325"},{"ruleId":"249","severity":1,"message":"326","line":7,"column":13,"nodeType":"251","messageId":"252","endLine":7,"endColumn":17},{"ruleId":"249","severity":1,"message":"327","line":7,"column":19,"nodeType":"251","messageId":"252","endLine":7,"endColumn":24},{"ruleId":"249","severity":1,"message":"328","line":7,"column":26,"nodeType":"251","messageId":"252","endLine":7,"endColumn":38},{"ruleId":"249","severity":1,"message":"329","line":12,"column":5,"nodeType":"251","messageId":"252","endLine":12,"endColumn":9},{"ruleId":"249","severity":1,"message":"330","line":13,"column":5,"nodeType":"251","messageId":"252","endLine":13,"endColumn":18},{"ruleId":"249","severity":1,"message":"331","line":16,"column":5,"nodeType":"251","messageId":"252","endLine":16,"endColumn":19},{"ruleId":"249","severity":1,"message":"332","line":78,"column":21,"nodeType":"251","messageId":"252","endLine":78,"endColumn":26},{"ruleId":"249","severity":1,"message":"333","line":83,"column":21,"nodeType":"251","messageId":"252","endLine":83,"endColumn":32},{"ruleId":"256","severity":1,"message":"257","line":1,"column":1,"nodeType":"258","messageId":"259","endLine":1,"endColumn":14,"fix":"334"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"335"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"336"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"337"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"338"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"339"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"340"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":1,"nodeType":"258","messageId":"259","endLine":1,"endColumn":14,"fix":"341"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":1,"nodeType":"263","messageId":"264","fix":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'toast' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"345","text":"346"},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"347","text":"346"},{"range":"348","text":"346"},"'bindActionCreators' is defined but never used.",{"range":"349","text":"346"},"'showLoader' is assigned a value but never used.","'closeLoader' is assigned a value but never used.",{"range":"350","text":"346"},"'useContext' is defined but never used.","'createContext' is defined but never used.","'useState' is defined but never used.","'ToastContainer' is defined but never used.","'loginFormPropsInterface' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'initialState' is defined but never used.","'headers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["351"],{"range":"352","text":"346"},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",{"range":"353","text":"346"},{"range":"354","text":"346"},{"range":"355","text":"346"},{"range":"356","text":"346"},{"range":"357","text":"346"},"'LoginApi' is defined but never used.","'useStyles' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"358","text":"346"},{"range":"359","text":"346"},"'getComparator' is defined but never used.","'stableSort' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'orderBy' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.",{"range":"360","text":"346"},{"range":"361","text":"346"},"'makeStyles' is defined but never used.",{"range":"362","text":"346"},"'Form' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'fade' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.",{"range":"363","text":"346"},{"range":"364","text":"346"},{"range":"365","text":"346"},{"range":"366","text":"346"},{"range":"367","text":"346"},{"range":"368","text":"346"},{"range":"369","text":"346"},{"range":"370","text":"346"},{"range":"371","text":"346"},"no-global-assign","no-unsafe-negation",[0,13],"",[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"372","fix":"373"},[0,13],[0,13],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[0,13],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[0,13],[-1,0],"Update the dependencies array to be: [login]",{"range":"374","text":"375"},[3928,3930],"[login]"]